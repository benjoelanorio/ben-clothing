{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyCfgL80u0ohwUICMBnrZtjiIXBQKHGhmoA\",\n  authDomain: \"ben-clothing-db.firebaseapp.com\",\n  databaseURL: \"https://ben-clothing-db.firebaseio.com\",\n  projectId: \"ben-clothing-db\",\n  storageBucket: \"ben-clothing-db.appspot.com\",\n  messagingSenderId: \"392567191650\",\n  appId: \"1:392567191650:web:f782c6eeb17c4695be793b\",\n  measurementId: \"G-KNQ3DCW0K4\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const collectionRef = firestore.collection('users');\n  const snapShot = await userRef.get();\n  const collectionSnapShot = await collectionRef.get();\n  console.log({\n    collection: collectionSnapShot.doc.map(doc => doc.data())\n  });\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('Error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  propmt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/home/benjoe/Documents/Udemy/Complete React Developer/ben-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","collectionRef","collection","snapShot","get","collectionSnapShot","console","log","map","data","exists","displayName","email","createdAt","Date","set","error","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","propmt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,iCAFC;AAGbC,EAAAA,WAAW,EAAE,wCAHA;AAIbC,EAAAA,SAAS,EAAE,iBAJE;AAKbC,EAAAA,aAAa,EAAE,6BALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqB,OAArB,CAAtB;AAEA,QAAMC,QAAQ,GAAG,MAAMN,OAAO,CAACO,GAAR,EAAvB;AACA,QAAMC,kBAAkB,GAAG,MAAMJ,aAAa,CAACG,GAAd,EAAjC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEL,IAAAA,UAAU,EAAEG,kBAAkB,CAACN,GAAnB,CAAuBS,GAAvB,CAA2BT,GAAG,IAAIA,GAAG,CAACU,IAAJ,EAAlC;AAAd,GAAZ;;AAEA,MAAI,CAACN,QAAQ,CAACO,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBjB,QAA/B;AACA,UAAMkB,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMjB,OAAO,CAACkB,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGjB;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOoB,KAAP,EAAc;AACdV,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCS,KAAK,CAACC,OAAzC;AACD;AACF;;AAED,SAAOpB,OAAP;AACD,CA3BM;AA6BPb,QAAQ,CAACkC,aAAT,CAAuBjC,MAAvB;AAEA,OAAO,MAAMkC,IAAI,GAAGnC,QAAQ,CAACmC,IAAT,EAAb;AACP,OAAO,MAAMrB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMsB,QAAQ,GAAG,IAAIpC,QAAQ,CAACmC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAepC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n  apiKey: \"AIzaSyCfgL80u0ohwUICMBnrZtjiIXBQKHGhmoA\",\n  authDomain: \"ben-clothing-db.firebaseapp.com\",\n  databaseURL: \"https://ben-clothing-db.firebaseio.com\",\n  projectId: \"ben-clothing-db\",\n  storageBucket: \"ben-clothing-db.appspot.com\",\n  messagingSenderId: \"392567191650\",\n  appId: \"1:392567191650:web:f782c6eeb17c4695be793b\",\n  measurementId: \"G-KNQ3DCW0K4\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const collectionRef = firestore.collection('users');\n\n  const snapShot = await userRef.get();\n  const collectionSnapShot = await collectionRef.get();\n  console.log({ collection: collectionSnapShot.doc.map(doc => doc.data()) });\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      })\n    } catch (error) {\n      console.log('Error creating user', error.message);\n    }\n  }\n\n  return userRef;\n}\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ propmt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}